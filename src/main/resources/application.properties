spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
#max.incremental.fetch.session.cache.slots

# Kafka
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.properties.schema.registry.url=${REGISTRY_URL}
campaign=${KAFKA_CAMPAIGN_TOPIC}
inboundUnprocessed=${KAFKA_INBOUND_UNPROCESSED_TOPIC}
inboundProcessed=${KAFKA_INBOUND_PROCESSED_TOPIC}
gupshup-opted-out=${KAFKA_INBOUND_GS_OPTED_OUT_TOPIC}
inbound-error=${KAFKA_INBOUND_ERROR_TOPIC}
odk-transformer=${KAFKA_ODK_TRANSFORMER_TOPIC}

# Cassandra
spring.data.cassandra.contactpoints=${CASSANDRA_URL}
spring.data.cassandra.port=${CASSANDRA_PORT}
spring.data.cassandra.keyspace-name=${CASSANDRA_KEYSPACE}
logging.level.root=INFO
spring.data.cassandra.pool.heartbeat-interval=30s
spring.data.cassandra.pool.max-queue-size=2000
spring.data.cassandra.pool.idle-timeout=10s
spring.data.cassandra.pool.pool-timeout=1s

server.port=8686
campaign.url = ${CAMPAIGN_URL}
campaign.admin.token = ${CAMPAIGN_ADMIN_TOKEN}

fusionauth.url = ${FUSIONAUTH_URL}
fusionauth.key = ${FUSIONAUTH_KEY}

encryptionKeyString=A%C*F-JaNdRgUkXp

# log4j2 log topic config
kafka.logs.topic=${KAFKA_LOGS_TOPIC}

producer.id=orchestrator

